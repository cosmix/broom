name: Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build (leave empty if using branch)'
        required: false
      branch:
        description: 'Branch to build (leave empty if using tag)'
        required: false

jobs:
  build-linux:
    name: Build Linux Binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        goarch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.tag || github.event.inputs.branch || github.ref }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.1'

    - name: Install zstd
      run: sudo apt-get update && sudo apt-get install -y zstd

    - name: Build Linux Binary
      env:
        GOOS: linux
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -ldflags="-s -w" -v -o broom-linux-${{ matrix.goarch }} ./cmd/broom
        zstd -19 broom-linux-${{ matrix.goarch }}

    - name: Upload Linux Binary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          gh release upload ${{ github.ref_name }} broom-linux-${{ matrix.goarch }}.zst
        else
          mkdir -p artifacts
          mv broom-linux-${{ matrix.goarch }}.zst artifacts/
        fi

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: broom-linux-${{ matrix.goarch }}
        path: artifacts/
      if: github.event_name == 'workflow_dispatch'

  build-macos:
    name: Build macOS Universal Binary
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.tag || github.event.inputs.branch || github.ref }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.1'

    - name: Install zstd
      run: brew install zstd

    - name: Build macOS Binaries and Create Universal Binary
      run: |
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -v -o broom-darwin-amd64 ./cmd/broom
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -v -o broom-darwin-arm64 ./cmd/broom
        lipo -create -output broom-darwin-universal broom-darwin-amd64 broom-darwin-arm64
        zstd -19 broom-darwin-universal

    - name: Upload macOS Universal Binary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          gh release upload ${{ github.ref_name }} broom-darwin-universal.zst
        else
          mkdir -p artifacts
          mv broom-darwin-universal.zst artifacts/
        fi

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: broom-darwin-universal
        path: artifacts/
      if: github.event_name == 'workflow_dispatch'

  upload_docs:
    name: Upload Documentation
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'release'
    steps:
    - uses: actions/checkout@v3

    - name: Upload LICENSE and README
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.ref_name }} LICENSE README.md
